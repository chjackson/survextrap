[{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://chjackson.github.io/survextrap/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://chjackson.github.io/survextrap/articles/examples.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Survival extrapolation using survextrap: methods details","text":"examples, use dataset trial chemotherapy colon cancer, provided colon survival package, outcome recurrence-free survival (etype==1) artificially censored 3 years.","code":"colonc <- colon |>     mutate(years = time/365.25) |>     filter(etype == 1) |>     mutate(status = ifelse(years > 3, 0, status),            years = ifelse(years > 3, 3, years)) ggsurvplot(survfit(Surv(years, status) ~ 1, data=colonc))"},{"path":"https://chjackson.github.io/survextrap/articles/examples.html","id":"no-external-data","dir":"Articles","previous_headings":"Examples","what":"No external data","title":"Survival extrapolation using survextrap: methods details","text":"following simplest, default model package fitted short-term trial data alone. external data supplied. three years (maximum follow time short term data) model assumes hazard stays constant. plot shows posterior median 95% credible intervals survival hazard functions. spline adapts give practically perfect fit short-term data. Although model assumes extrapolated hazard constant, still wide uncertainty interval around constant value. might thought plausible. allow possibility hazard changes beyond three years placing spline knots beyond point. basehaz_ops argument used control spline, bknots component vector comprising lower upper boundary knots. simply move upper boundary knot three four years. increases amount uncertainty extrapolated survival hazard. ways done , changing position knot, adding extra knots around beyond upper part data. extrapolations likely sensitive choice. necessary extrapolate way information long term hazard! many practical situations extrapolation time--event models, information. human survival, know people tend live longer 100 years. usually data national agencies mortality general populations.","code":"nd_mod <- survextrap(Surv(years, status) ~ 1, data=colonc, chains=1, est_smooth = TRUE) print(nd_mod) plot(nd_mod, tmax=5) nd_mod2 <- survextrap(Surv(years, status) ~ 1, data=colonc, chains=1, est_smooth = TRUE,                      basehaz_ops = list(bknots = c(0, 4))) plot(nd_mod2, tmax=5)"},{"path":"https://chjackson.github.io/survextrap/articles/examples.html","id":"with-a-smaller-dataset","dir":"Articles","previous_headings":"Examples","what":"With a smaller dataset","title":"Survival extrapolation using survextrap: methods details","text":"Estimating smoothing parameter works nicely quickly. Hazard curve suggests overfitting excessive number knots","code":"nd_mod <- survextrap(Surv(futime, fustat) ~ 1, data=ovarian, chains=1, est_smooth = TRUE) plot(nd_mod)"},{"path":"https://chjackson.github.io/survextrap/articles/examples.html","id":"mean-and-restricted-mean-survival","dir":"Articles","previous_headings":"Examples","what":"Mean and restricted mean survival","title":"Survival extrapolation using survextrap: methods details","text":"functions mean_survextrap rmst_survextrap calculate mean restricted mean survival time (RMST) fitted model. Uncertainty expressed using MCMC sample model parameters, calculating mean (RMST) draw, produces sample posterior distribution mean (RMST). posterior median credible intervals computed summarising sample. particular combinations parameter values, mean model nd_mod calculated (resulting error message divergent integral), suggesting substantial posterior probability mean infinite. Instead compute restricted mean \\(RMST(t)\\) [DEF] three alternative time limits \\(t\\): 3, 10 1000 years. upper 95% credible limit \\(RMST(1000)\\) 500. really believe mean survival population can 500 years, however. evidence fitted model unrealistic, included external information bound estimates mean within plausible values. can done external data.","code":"# mean_survextrap(nd_mod) rmst_survextrap(nd_mod, c(3,10,1000))"},{"path":"https://chjackson.github.io/survextrap/articles/examples.html","id":"extrapolation-using-long-term-population-data","dir":"Articles","previous_headings":"Examples","what":"Extrapolation using long term population data","title":"Survival extrapolation using survextrap: methods details","text":"Suppose judge 5 years, survival patients general population, data describing annual survival rates population similar one, perhaps matching national statistics registry data age sex. TODO explain knot choice external data. Including external data gives confident extrapolation. Mean finite. RMST converges mean supposed ","code":"extdat <- data.frame(start = c(5, 10, 15, 20),                       stop =  c(10, 15, 20, 25),                       n = c(100, 100, 100, 100),                       r = c(50, 40, 30, 20)) nde_mod <- survextrap(Surv(years, status) ~ 1, data=colonc, est_smooth = TRUE,                       chains=1, external = extdat) plot(nde_mod) mean_survextrap(nde_mod) rmst_survextrap(nde_mod, c(3, 10, 1000))"},{"path":"https://chjackson.github.io/survextrap/articles/examples.html","id":"expert-elicitation-on-the-long-term","dir":"Articles","previous_headings":"Examples","what":"Expert elicitation on the long term","title":"Survival extrapolation using survextrap: methods details","text":"Information long term survival elicited experts. use information model, also elicit expert’s uncertainty. example, ask expert consider set people survived 10 years. many expect survive 5 years? kind formal elicitation process, supply best guess (median) 30%, 95% credible interval 10% 50%. Using standard techniques elicitation (link shelf fitdist) can interpret \\(Beta(6.6, 15.0)\\) prior distribution survival probability. can interpret posterior observed \\(y=6\\) survivors \\(n=20\\) people (recalling posterior \\(Binomial(y, n)\\) combined vague \\(Beta(0.5, 0.5)\\) prior \\(Beta(y+0.5, n-y+0.5)\\), rounding \\(n\\) \\(y\\) whole numbers). expert’s judgment equivalent information external dataset form can use survextrap model follows: still substantial uncertainty mean, even level information, comparing second model REF , better information . TODO revisit knots. approach might extended include elicited values multiple time points, considering multiple experts. case elicited information can converted straightforwardly aggregate table use survextrap.","code":"SHELF::fitdist(vals=c(0.1, 0.3, 0.5), probs=c(0.025, 0.5, 0.975), lower=0, upper=1)$Beta extdat <- data.frame(start = c(10), stop =  c(15),                       n = c(20), r = c(6)) nde_mod <- survextrap(Surv(years, status) ~ 1, data=colonc, est_smooth = TRUE,                       chains=1, external = extdat) plot(nde_mod) mean_survextrap(nde_mod)"},{"path":"https://chjackson.github.io/survextrap/articles/examples.html","id":"covariates","dir":"Articles","previous_headings":"Examples","what":"Covariates","title":"Survival extrapolation using survextrap: methods details","text":"Proportional hazards model. Example: treatment group rx, factor three levels Log hazard ratios agree Cox model. fitted survival different KM curves? proportional hazards assumption wrong. Can graphical check . Cumulative log hazard? number covariates, categorical continuous, can included. can also covariates external data. covariates included model formula, external dataset supplied, must specify covariate values row external dataset. (covariates factors, can supplied character vectors external, values taken factor levels internal data [todo: probably isn’t necessary restriction]) example, external data might assumed survival control group trial (corresponding value \"Obs\" variable rx).","code":"coxph(Surv(years, status) ~ rx, data=colonc) rxph_mod <- survextrap(Surv(years, status) ~ rx, data=colonc, chains=1, est_smooth = TRUE) summary(rxph_mod) |>     filter(variable==\"loghr\") plot(rxph_mod, niter=100) extdat <- data.frame(start = c(5, 10), stop =  c(10, 15),                       n = c(100, 100), r = c(50, 40),                       rx = \"Obs\") rxphe_mod <- survextrap(Surv(years, status) ~ rx, data=colonc,                        chains=1, external = extdat) rmst_survextrap(rxphe_mod, niter=100, t=20) plot(rxphe_mod, niter=100, tmax=5) plot_hazard(rxphe_mod, niter=100, tmax=20)"},{"path":"https://chjackson.github.io/survextrap/articles/examples.html","id":"relative-survival","dir":"Articles","previous_headings":"Examples","what":"Relative survival","title":"Survival extrapolation using survextrap: methods details","text":"implemented yet. easily support constant background hazard conventional additive hazard model. proportional hazards model implemented, also supply background survival external count data estimate hazard ratio.","code":""},{"path":"https://chjackson.github.io/survextrap/articles/examples.html","id":"cure-models","dir":"Articles","previous_headings":"Examples","what":"Cure models","title":"Survival extrapolation using survextrap: methods details","text":"Generate dataset obvious cure fraction allow covariates cure fraction well, flexsurvcure default?","code":"set.seed(1) t <- rmixsurv(qweibull, n=1000, theta=0.5, shape=1.5, scale=1.2) censtime <- 10 cure_df <- data.frame(t = pmin(t, censtime), status = as.numeric(t < censtime))  plot(survfit(Surv(t, status) ~ 1, data=cure_df))  ## These are slow to sample  noncure_mod <- survextrap(Surv(t, status) ~ 1, data=cure_df, chains=1,                            cure=FALSE, est_smooth = TRUE) plot(noncure_mod) # doesn't quite capture the curve  ## This is very slow, but it fits   cure_mod <- survextrap(Surv(t, status) ~ 1, data=cure_df, chains=1, cure=TRUE, modelid=1, est_smooth = TRUE) plot(cure_mod, tmax=10)"},{"path":[]},{"path":"https://chjackson.github.io/survextrap/articles/methods.html","id":"m-splines","dir":"Articles","previous_headings":"Technical details of the model","what":"M-splines","title":"Survival extrapolation using survextrap: methods details","text":"axis time split set regions defined knots. figure , knots located integers 0 10, shown grid lines. knot associated cubic polynomial function \\(b_k(t)\\), known basis function. M-spline basis functions defined positive. 11 basis functions interior space. basis function peak around knot, diminishes zero either side. Two additional basis functions used peaks boundaries space, \\(K=13\\) basis functions total. See Ramsay exact definitions \\(b_k(t)\\). hazard \\(h(t)\\) time \\(t\\) defined weighted sum basis functions: \\[h(t) = \\eta \\sum_k p_k b_k(t)\\] weights \\(p_1,\\ldots,p_K\\) sum 1, \\(\\sum_k p_k = 1\\), known basis coefficients. scale parameter \\(\\eta\\) describes average level hazard.","code":"p_equal <- rep(1/13, 13) p_unif <- mspline_uniform_weights(knots=1:9, bknots=c(0,10)) haz_unif <- plot_mspline(df=13, scale=10, p = p_unif, plot=FALSE)$hazard  plot_mspline(df=13, scale=10, p = p_equal, tmax=10) +      geom_line(aes(x=time, y=haz), data=haz_unif, color=\"red\", lwd=1.5, inherit.aes = FALSE) +      annotate(geom=\"text\", x=2, y=1.5, color=\"red\", label=\"h(t): weights `p_auto`\") +     annotate(geom=\"text\", x=1.5, y=2.5, color=\"blue\", label=\"h(t): weights `p_equal`\") +      xlab(\"Time t\") + ylab(\"Hazard rate\") + ylim(0,3)"},{"path":"https://chjackson.github.io/survextrap/articles/methods.html","id":"using-m-splines-to-represent-particular-hazard-shapes","dir":"Articles","previous_headings":"Technical details of the model","what":"Using M-splines to represent particular hazard shapes","title":"Survival extrapolation using survextrap: methods details","text":"weights \\(p_k\\) define hazard changes time. knots equally spaced, \\(p_k\\) nearly proportional hazard \\(k\\)th region, \\(p_k\\) equal, hazard nearly constant (red line p_equal figure). exactly constant influence regions either end space, whose polynomial functions skewed shape. produce practically constant hazard, can search numerically \\(p_k\\) minimise variance selection points \\(t\\) span area want model. search can done automatically package (red line p_auto figure). Extrapolation? fully specify parametric time--event model, define hazard times greater time \\(t_{K}\\) highest knot, 10 example. model survextrap simply assumes hazard \\(t > t_{K}\\) constant, hazard \\(t_{K}\\). Therefore, want estimate survival period think hazard might constant, make sure highest spline knot \\(t_K\\) end period. (Sidenote. Another way define hazard beyond last knot extrapolate final basis polynomials, implemented. Although lead smoothly extrapolated hazard, driven data just boundary, making opaque assumptions hazard changes boundary. Ihe idea behind package make assumptions explicit data mechanisms. Perhaps better approach make function smooth final knot still constant , somehow). Examples different kinds data knowledge given REF , summarise ","code":"plot_mspline(knots=c(1,3,5), bknots=c(0, 7), p=c(0.2, 0.3, 0.1, 0.1, 0.3, 0.1, 0.1), tmax=15)"},{"path":"https://chjackson.github.io/survextrap/articles/methods.html","id":"why-not-other-kinds-of-spline","dir":"Articles","previous_headings":"Technical details of the model > Using M-splines to represent particular hazard shapes","what":"Why not other kinds of spline?","title":"Survival extrapolation using survextrap: methods details","text":"Royston/Parmar model (e.g. flexsurv) uses natural cubic spline log cumulative hazard function. cumulative hazard defined non-decreasing function, spline constrained. constraint handled fitting model - spline coefficients imply non-increasing cumulative hazard functions rejected. inefficient. also placed unrestricted spline log hazard. disadvantage cumulative hazard (required obtain likelihood censored data) evaluated numerical integration, slow. advantage putting M-spline hazard respects constraint hazard non-negative, can integrated analytically produce cumulative hazard.","code":""},{"path":"https://chjackson.github.io/survextrap/articles/methods.html","id":"bayesian-model-specification","dir":"Articles","previous_headings":"Technical details of the model","what":"Bayesian model specification","title":"Survival extrapolation using survextrap: methods details","text":"parameters model, \\(p_k\\) \\(\\eta\\), estimated data using Bayesian inference. flexibility fitted model determined two things. number \\(K\\) choice knots. determines maximum potential flexibility hazard function. prior distribution basis coefficients \\(p_k\\). plays role smoothing fitted hazard function. default approach taken survextrap choose large number knots \\(K\\), intended accommodate reasonable situations, estimate extent smoothing needed data. data, fitted curve flexible necessary represent data. less data, fit influenced prior. smoother, Bayesian analogue common approach spline model selection based choosing \\(K\\) give model lowest AIC. also similar principle “penalised likelihood” methods implemented e.g. mgcv rstpm2 packages.","code":""},{"path":"https://chjackson.github.io/survextrap/articles/methods.html","id":"prior-distribution-for-the-hazard-curve","dir":"Articles","previous_headings":"Technical details of the model","what":"Prior distribution for the hazard curve","title":"Survival extrapolation using survextrap: methods details","text":"log-normal prior used scale \\(\\eta\\). Currently set (todo explain rationale. log crude event rate plus normal(0, 20) rstanarm. ) multinomial logistic distribution defines prior coefficients \\(p_k\\) define mass hazard region: \\(log(p_k / p_1) = \\beta_k\\), \\(\\beta_1=0\\) \\(\\beta_k \\sim Logistic(\\mu_k, \\sigma)\\) \\(k = 2, \\ldots, K\\). prior defined : Prior mean: \\(\\boldsymbol{\\mu} = (\\mu_2,\\ldots,\\mu_K)\\). default, determined special set \\(p_k\\) result constant hazard \\(h(t)\\), REF graph . Prior variability: \\(\\sigma\\) controls smoothness fitted hazard curve. \\(\\sigma=0\\), certain hazard function one defined \\(\\boldsymbol{\\mu}\\). Values \\(\\sigma\\) around 1 favour wiggly curves, fitted hazard curve driven mainly observed data. high values \\(\\sigma\\), hazard dominated random one \\(K\\) basis functions, typically useful practice. (Sidenote. similar Dirichlet distribution \\(p_k\\), slightly better behaved estimation. interpretation \\(\\sigma\\) completely intuitive, hope show empirically prior works usefully well practice) plots show samples prior distribution hazard functions implied two choices joint distribution \\(\\eta\\) \\(p\\). , \\(\\eta\\) log normal(0,1), supports hazard rates 0.1 7, prior mean \\(p\\) special set centred around constant hazard. two samples differ choice prior variability. \\(\\sigma=0.05\\) strong prior forces hazard nearly uniform, \\(\\sigma=1\\) allows wide range wiggly shapes. default, package estimates \\(\\sigma\\) part full Bayesian model (gamma(2,1) prior), uncertainty level smoothness accounted . sampling poor, alternative procedure might work - fit model two steps (“empirical Bayes”): “training” model fit perfomed, prior placed \\(\\sigma\\), maximum posteriori estimate \\(\\hat\\sigma\\) \\(\\sigma\\) determined. “final” model fitted, \\(\\sigma\\) fixed \\(\\hat\\sigma\\), giving “optimal” amount smoothness hazard \\(h(t)\\). Either way, procedures still need tested empirically see whether gives sensible results. seems -smooth cases. Though may matter hazard function -smoothed, purpose model estimate quantity average time (e.g. mean survival). sensible route resolving uncertainties might use cross-validation assess choose model specifications, though hasn’t implemented yet (“leave-one-” approach OK censored data?). Note assess short-term fit, using principle AIC.","code":"knots <- c(1:9); bknots <- c(0,10) p_mean <- mspline_uniform_weights(knots, bknots) prior_mean <- log(p_mean[-1] / p_mean[1]) #prior_mean <- rep(1, length(knots) + 4) set.seed(1) p1 <- plot_mspline_priorpred(knots=knots, bknots=bknots, tmax=max(bknots)+1,                         prior_mean=prior_mean, prior_sd=0.05, scale_sd=1, nsim=10) +      ylim(0, 1) + ggtitle(bquote(sigma==0.05)) p2 <- plot_mspline_priorpred(knots=knots, bknots=bknots, tmax=max(bknots)+1,                         prior_mean=prior_mean, prior_sd=1, scale_sd=1, nsim=10) +      ylim(0, 1) + ggtitle(bquote(sigma==1)) gridExtra::grid.arrange(p1, p2, nrow=1)"},{"path":"https://chjackson.github.io/survextrap/articles/methods.html","id":"choice-of-knots-when-modelling-data","dir":"Articles","previous_headings":"Technical details of the model","what":"Choice of knots when modelling data","title":"Survival extrapolation using survextrap: methods details","text":"default, internal knots placed quantiles vector comprising uncensored survival times individual level data distinct follow-times external data. (Smarter suggestions welcome ). 6 internal knots used, (cubic polynomials) leads \\(K=10\\) basis functions [check notation] parameters Users can override default however, place knots position. default, lower boundary knot set 0. upper boundary knot set highest follow-time data. default overridden want extrapolate, think hazard might change. Currently, number knots depend absolute amount data - ? small datasets, lots knots data points - relying strongly prior smoothing. implemented cross-validation, assess whether matters.","code":""},{"path":"https://chjackson.github.io/survextrap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christopher Jackson. Author, maintainer.","code":""},{"path":"https://chjackson.github.io/survextrap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jackson C (2022). survextrap: Survival Extrapolation Flexible Parametric Model External Data. https://github.com/chjackson/survextrap, https://chjackson.github.io/survextrap/.","code":"@Manual{,   title = {survextrap: Survival Extrapolation With a Flexible Parametric Model and External Data},   author = {Christopher Jackson},   year = {2022},   note = {https://github.com/chjackson/survextrap, https://chjackson.github.io/survextrap/}, }"},{"path":"https://chjackson.github.io/survextrap/index.html","id":"survextrap","dir":"","previous_headings":"","what":"Survival Extrapolation With a Flexible Parametric Model and External Data","title":"Survival Extrapolation With a Flexible Parametric Model and External Data","text":"survextrap R package development, model survival combination standard individual-level, right-censored survival dataset “External” data sources following aggregate “count” form: number rows can supplied “external” data, time intervals distinct exhaustive. package developed expectation many forms external data might useful survival extrapolation (population data, registry data elicited judgements) can manipulated common “count” form.","code":""},{"path":"https://chjackson.github.io/survextrap/index.html","id":"principles","dir":"","previous_headings":"","what":"Principles","title":"Survival Extrapolation With a Flexible Parametric Model and External Data","text":"Extrapolations short-term individual level data done using explicit data judgements risk change time. Extrapolations rely conventional parametric forms (e.g. Weibull, log-normal, gamma…) interpretations meaningful mechanisms risk changes time. Instead selecting (averaging) traditional parametric models, arbitrarily flexible parametric model used, adapts give optimal fit short-term long-term data combination.","code":""},{"path":"https://chjackson.github.io/survextrap/index.html","id":"how-it-works","dir":"","previous_headings":"","what":"How it works","title":"Survival Extrapolation With a Flexible Parametric Model and External Data","text":"Bayesian multiparameter evidence synthesis used jointly model sources data judgements M-spline used represent hazard changes time. Bayesian fitting method automatically chooses optimal level smoothness flexibility. Spline “knots” span period covered data, period chance hazard may vary. proportional hazards model used describe relation survival predictors. Mixture cure models supported. Stan software used MCMC (Hamiltonian Monte Carlo) sampling posterior distribution. Estimates credible intervals survival, hazard, mean restricted mean survival can easily extracted fitted model.","code":""},{"path":"https://chjackson.github.io/survextrap/index.html","id":"methods-details","dir":"","previous_headings":"","what":"Methods details","title":"Survival Extrapolation With a Flexible Parametric Model and External Data","text":"See vignette","code":""},{"path":"https://chjackson.github.io/survextrap/index.html","id":"how-to-use-it","dir":"","previous_headings":"","what":"How to use it","title":"Survival Extrapolation With a Flexible Parametric Model and External Data","text":"See vignette","code":""},{"path":"https://chjackson.github.io/survextrap/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Survival Extrapolation With a Flexible Parametric Model and External Data","text":"package active development. can currently fit large range useful models, finished. Major things : Cross-validation. Better thought-knot choice, particularly external data. experience using real external data. Relative survival / additive hazards models. Non-proportional hazards. expected computationally difficult, ’m sure best approach. Thorough testing. Feedback suggestions welcome - can posted github issues.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/Survmspline.html","id":null,"dir":"Reference","previous_headings":"","what":"M-spline survival distribution — Survmspline","title":"M-spline survival distribution — Survmspline","text":"Probability density, distribution, quantile, random generation, hazard, cumulative hazard, mean restricted mean functions M-spline time--event model.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/Survmspline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"M-spline survival distribution — Survmspline","text":"","code":"psurvmspline(   q,   alpha,   coefs,   knots,   degree = 3,   lower.tail = TRUE,   log.p = FALSE )  Hsurvmspline(x, alpha, coefs, knots, degree = 3, log = FALSE)  hsurvmspline(x, alpha, coefs, knots, degree = 3, log = FALSE)  dsurvmspline(x, alpha, coefs, knots, degree = 3, log = FALSE)  qsurvmspline(   p,   alpha,   coefs,   knots,   degree = 3,   lower.tail = TRUE,   log.p = FALSE )  rsurvmspline(n, alpha, coefs, knots, degree = 3)  rmst_survmspline(t, alpha, coefs, knots, degree = 3)  mean_survmspline(alpha, coefs, knots, degree = 3)"},{"path":"https://chjackson.github.io/survextrap/reference/Survmspline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"M-spline survival distribution — Survmspline","text":"alpha Log scale parameter. coefs Spline basis coefficients. sum 1, otherwise normalised internally sum 1. knots Locations knots axis time, supplied increasing order.  include two boundary knots. vectorised usage functions, knots degree must alternative times parameter values. degree Spline polynomial degree. lower.tail logical; TRUE (default), probabilities \\(P(X \\le x)\\), otherwise, \\(P(X > x)\\). x, q, t Vector times. log, log.p Return log density probability. p Vector probabilities. n Number random numbers simulate.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/Survmspline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"M-spline survival distribution — Survmspline","text":"dsurvmspline gives density, psurvmspline gives distribution function, hsurvmspline gives hazard Hsurvmspline gives cumulative hazard, described qsurvmspline gives quantile function, computed crude numerical inversion (using qgeneric). rsurvmspline generates random survival times using qsurvmspline sample uniform random numbers.  Due numerical root-finding involved qsurvmspline, slow compared typical random number generation functions.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/Survmspline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"M-spline survival distribution — Survmspline","text":"M-spline paper, rstanarm paper","code":""},{"path":"https://chjackson.github.io/survextrap/reference/Survmspline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"M-spline survival distribution — Survmspline","text":"Christopher Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/survextrap/reference/hazard_survextrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates of hazard from a survextrap model — hazard_survextrap","title":"Estimates of hazard from a survextrap model — hazard_survextrap","text":"Estimates hazard survextrap model","code":""},{"path":"https://chjackson.github.io/survextrap/reference/hazard_survextrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates of hazard from a survextrap model — hazard_survextrap","text":"","code":"hazard_survextrap(   x,   newdata = NULL,   times = NULL,   tmax = NULL,   niter = NULL,   sample = FALSE )"},{"path":"https://chjackson.github.io/survextrap/reference/hazard_survextrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates of hazard from a survextrap model — hazard_survextrap","text":"x fitted model object returned survextrap newdata Data frame covariate values compute output . covariates model supplied, following default used: () covariate one factor variable, output computed level factor. (b) multiple covariates, numeric covariates, output computed mean numeric covariate original data, baseline level factor covariate. times Vector times compute estimates. tmax Maximum time compute estimates.  times supplied, ignored.  times supplied, times set set 100 equally spaced time points 0 tmax.  tmax times supplied, tmax set maximum follow time data. niter Number MCMC iterations use compute credible intervals.  Set low value make function quicker, cost approximation error (may important plotting). sample TRUE MCMC samples returned instead summarised median 95% credible intervals.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/mean_survextrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean survival time — mean_survextrap","title":"Mean survival time — mean_survextrap","text":"Mean survival time","code":""},{"path":"https://chjackson.github.io/survextrap/reference/mean_survextrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean survival time — mean_survextrap","text":"","code":"mean_survextrap(x, newdata = NULL, niter = NULL)"},{"path":"https://chjackson.github.io/survextrap/reference/mean_survextrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean survival time — mean_survextrap","text":"x fitted model object returned survextrap newdata Data frame covariate values compute output . covariates model supplied, following default used: () covariate one factor variable, output computed level factor. (b) multiple covariates, numeric covariates, output computed mean numeric covariate original data, baseline level factor covariate. niter Number MCMC iterations use compute credible intervals.  Set low value make function quicker, cost approximation error (may important plotting).","code":""},{"path":"https://chjackson.github.io/survextrap/reference/mspline_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate an M-spline basis matrix at the specified times. — mspline_basis","title":"Evaluate an M-spline basis matrix at the specified times. — mspline_basis","text":"Extrapolation beyond boundary knots done assuming basis term constant beyond boundary value boundary. gives continuous non-smooth function.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/mspline_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate an M-spline basis matrix at the specified times. — mspline_basis","text":"","code":"mspline_basis(times, iknots, bknots, degree = 3, integrate = FALSE)"},{"path":"https://chjackson.github.io/survextrap/reference/mspline_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate an M-spline basis matrix at the specified times. — mspline_basis","text":"times numeric vector times .  TODO DOCUMENT negative iknots Internal knots bknots Boundary knots degree Spline degree integrate TRUE, integrated M-spline (-spline) basis returned.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/mspline_basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate an M-spline basis matrix at the specified times. — mspline_basis","text":"two-dimensional array.  Rows times, columns basis terms.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/mspline_plotsetup.html","id":null,"dir":"Reference","previous_headings":"","what":"Get times and basis for an illustration of an M-spline with given knots. — mspline_plotsetup","title":"Get times and basis for an illustration of an M-spline with given knots. — mspline_plotsetup","text":"Get times basis illustration M-spline given knots.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/mspline_plotsetup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get times and basis for an illustration of an M-spline with given knots. — mspline_plotsetup","text":"","code":"mspline_plotsetup(   knots,   bknots = c(0, 10),   tmin = NULL,   tmax = NULL,   degree = 3,   df = 10,   extrap_model = \"constant\" )"},{"path":"https://chjackson.github.io/survextrap/reference/mspline_plotsetup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get times and basis for an illustration of an M-spline with given knots. — mspline_plotsetup","text":"knots Internal knots.  supplied, df specified.  defaults equally spaced knots boundary knots. bknots Boundary knots.   Defaults c(0,10). tmin Minimum plotting time.  Defaults lower boundary knot tmax Maximum plotting time.  Defaults upper boundary knot degree Spline polynomial degree. df df TODO extrap_model \"constant\" hazard final boundary knot equals hazard knot.  Otherwise basis functions simply extended outside boundary knot.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/mspline_uniform_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate M-spline basis weights which give a constant hazard — mspline_uniform_weights","title":"Estimate M-spline basis weights which give a constant hazard — mspline_uniform_weights","text":"Estimate M-spline basis weights give constant hazard","code":""},{"path":"https://chjackson.github.io/survextrap/reference/mspline_uniform_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate M-spline basis weights which give a constant hazard — mspline_uniform_weights","text":"","code":"mspline_uniform_weights(knots, bknots, times = NULL, degree = 3)"},{"path":"https://chjackson.github.io/survextrap/reference/mspline_uniform_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate M-spline basis weights which give a constant hazard — mspline_uniform_weights","text":"knots TODO bknots TODO times TODO degree TODO","code":""},{"path":"https://chjackson.github.io/survextrap/reference/plot.survextrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for survextrap model objects — plot.survextrap","title":"Plot method for survextrap model objects — plot.survextrap","text":"Plot method survextrap model objects","code":""},{"path":"https://chjackson.github.io/survextrap/reference/plot.survextrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for survextrap model objects — plot.survextrap","text":"","code":"# S3 method for survextrap plot(x, type = \"hazsurv\", ...)"},{"path":"https://chjackson.github.io/survextrap/reference/plot.survextrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for survextrap model objects — plot.survextrap","text":"x Fitted model object survextrap. type \"survival\" plot survival function, \"hazard\" hazard function, time. ... Additional arguments, passed plot_hazard plot_survival.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/plot_hazard.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot hazard curves from a survextrap model — plot_hazard","title":"Plot hazard curves from a survextrap model — plot_hazard","text":"Plot hazard curves survextrap model","code":""},{"path":"https://chjackson.github.io/survextrap/reference/plot_hazard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot hazard curves from a survextrap model — plot_hazard","text":"","code":"plot_hazard(   x,   newdata = NULL,   times = NULL,   tmax = NULL,   niter = NULL,   ci = NULL,   xlab = \"Time\",   ylab = \"Hazard\",   line_size = 1.5,   ci_alpha = 0.2 )"},{"path":"https://chjackson.github.io/survextrap/reference/plot_hazard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot hazard curves from a survextrap model — plot_hazard","text":"x fitted model object returned survextrap newdata Data frame covariate values compute output . covariates model supplied, following default used: () covariate one factor variable, output computed level factor. (b) multiple covariates, numeric covariates, output computed mean numeric covariate original data, baseline level factor covariate. times Vector times compute estimates. tmax Maximum time compute estimates.  times supplied, ignored.  times supplied, times set set 100 equally spaced time points 0 tmax.  tmax times supplied, tmax set maximum follow time data. niter Number MCMC iterations use compute credible intervals.  Set low value make function quicker, cost approximation error (may important plotting). ci TRUE credible intervals drawn.  Defaults drawing intervals plot shows curve one covariate value. xlab X-axis label ylab Y-axis label line_size Passed geom_line. ci_alpha Transparency credible interval ribbons","code":""},{"path":"https://chjackson.github.io/survextrap/reference/plot_mspline.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a M-spline function, showing how it is built up from its basis — plot_mspline","title":"Plot a M-spline function, showing how it is built up from its basis — plot_mspline","text":"Plot M-spline function, showing built basis","code":""},{"path":"https://chjackson.github.io/survextrap/reference/plot_mspline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a M-spline function, showing how it is built up from its basis — plot_mspline","text":"","code":"plot_mspline(   knots = NULL,   bknots = c(0, 10),   df = 10,   degree = 3,   p = NULL,   scale = 1,   tmin = 0,   tmax = 10,   plot = TRUE )"},{"path":"https://chjackson.github.io/survextrap/reference/plot_mspline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a M-spline function, showing how it is built up from its basis — plot_mspline","text":"knots Internal knots bknots Boundary knots df TODO degree Degree polynomials defining spline p Weights TODO rename coefs scale Scale parameter tmin Minimum time plot tmax Maximum time plot plot Plot","code":""},{"path":"https://chjackson.github.io/survextrap/reference/plot_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot survival curves from a survextrap model — plot_survival","title":"Plot survival curves from a survextrap model — plot_survival","text":"Plot survival curves survextrap model","code":""},{"path":"https://chjackson.github.io/survextrap/reference/plot_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot survival curves from a survextrap model — plot_survival","text":"","code":"plot_survival(   x,   newdata = NULL,   times = NULL,   tmax = NULL,   km = NULL,   niter = NULL,   ci = NULL,   xlab = \"Time\",   ylab = \"Hazard\",   line_size = 1.5,   ci_alpha = 0.2 )"},{"path":"https://chjackson.github.io/survextrap/reference/plot_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot survival curves from a survextrap model — plot_survival","text":"x fitted model object returned survextrap newdata Data frame covariate values compute output . covariates model supplied, following default used: () covariate one factor variable, output computed level factor. (b) multiple covariates, numeric covariates, output computed mean numeric covariate original data, baseline level factor covariate. times Vector times compute estimates. tmax Maximum time compute estimates.  times supplied, ignored.  times supplied, times set set 100 equally spaced time points 0 tmax.  tmax times supplied, tmax set maximum follow time data. km TRUE Kaplan-Meier curve observed data plotted, using results survival::survfit() formula originally used survextrap fit. default, done covariates one factor covariate. niter Number MCMC iterations use compute credible intervals.  Set low value make function quicker, cost approximation error (may important plotting). ci TRUE credible intervals drawn.  Defaults drawing intervals plot shows curve one covariate value. xlab X-axis label ylab Y-axis label line_size Passed geom_line. ci_alpha Transparency credible interval ribbons","code":""},{"path":"https://chjackson.github.io/survextrap/reference/print.survextrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a fitted survextrap model — print.survextrap","title":"Print a fitted survextrap model — print.survextrap","text":"Print fitted survextrap model","code":""},{"path":"https://chjackson.github.io/survextrap/reference/print.survextrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a fitted survextrap model — print.survextrap","text":"","code":"# S3 method for survextrap print(x, ...)"},{"path":"https://chjackson.github.io/survextrap/reference/print.survextrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a fitted survextrap model — print.survextrap","text":"x fitted model object returned survextrap ... arguments (currently unused).","code":""},{"path":"https://chjackson.github.io/survextrap/reference/qgeneric.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to find quantiles of a distribution — qgeneric","title":"Generic function to find quantiles of a distribution — qgeneric","text":"Generic function find quantiles distribution, given equivalent probability distribution function.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/qgeneric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to find quantiles of a distribution — qgeneric","text":"","code":"qgeneric(pdist, p, matargs = NULL, scalarargs = NULL, ...)"},{"path":"https://chjackson.github.io/survextrap/reference/qgeneric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to find quantiles of a distribution — qgeneric","text":"pdist Probability distribution function, example, pnorm normal distribution, must defined current workspace.  accept return vectorised parameters values.  also return correct values entire real line, example positive distribution pdist(x)==0 \\(x<0\\). p Vector probabilities find quantiles . matargs Character vector giving elements ... represent vector parameters distribution.  Empty default.  vectorised, become matrices. scalarargs Character vector naming arguments distribution function vectorised. ... remaining arguments define parameters distribution pdist.  MUST named explicitly. may also contain standard arguments log.p, lower.tail (used , e.g. qnorm) distribution bounded , contain arguments lbound ubound respectively, returned p 0 1 respectively.  Defaults -Inf Inf respectively.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/qgeneric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to find quantiles of a distribution — qgeneric","text":"Vector quantiles distribution p.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/qgeneric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic function to find quantiles of a distribution — qgeneric","text":"function used default custom distributions quantile function provided. works finding root equation \\(h(q) = pdist(q) - p = 0\\). Starting interval \\((-1, 1)\\), interval width expanded 50\\ found using uniroot. assumes suitably smooth, continuous distribution.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/qgeneric.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic function to find quantiles of a distribution — qgeneric","text":"Christopher Jackson chris.jackson@mrc-bsu.cam.ac.uk","code":""},{"path":"https://chjackson.github.io/survextrap/reference/rmst_survextrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Restricted mean survival time — rmst_survextrap","title":"Restricted mean survival time — rmst_survextrap","text":"Restricted mean survival time","code":""},{"path":"https://chjackson.github.io/survextrap/reference/rmst_survextrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restricted mean survival time — rmst_survextrap","text":"","code":"rmst_survextrap(x, t, newdata = NULL, niter = NULL)"},{"path":"https://chjackson.github.io/survextrap/reference/rmst_survextrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restricted mean survival time — rmst_survextrap","text":"x fitted model object returned survextrap t Vector times.  restricted mean survival time one times computed. newdata Data frame covariate values compute output . covariates model supplied, following default used: () covariate one factor variable, output computed level factor. (b) multiple covariates, numeric covariates, output computed mean numeric covariate original data, baseline level factor covariate. niter Number MCMC iterations use compute credible intervals.  Set low value make function quicker, cost approximation error (may important plotting).","code":""},{"path":"https://chjackson.github.io/survextrap/reference/summary.survextrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior summary statistics for parameters of survextrap models — summary.survextrap","title":"Posterior summary statistics for parameters of survextrap models — summary.survextrap","text":"intervals 95\\","code":""},{"path":"https://chjackson.github.io/survextrap/reference/summary.survextrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior summary statistics for parameters of survextrap models — summary.survextrap","text":"","code":"# S3 method for survextrap summary(object, ...)"},{"path":"https://chjackson.github.io/survextrap/reference/summary.survextrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior summary statistics for parameters of survextrap models — summary.survextrap","text":"object fitted model object returned survextrap ... argument (currently unused).","code":""},{"path":"https://chjackson.github.io/survextrap/reference/summary.survextrap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Posterior summary statistics for parameters of survextrap models — summary.survextrap","text":"Suggestions else add welcome.  Convergence diagnostics?","code":""},{"path":"https://chjackson.github.io/survextrap/reference/surv_survextrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates of survival from a survextrap model — surv_survextrap","title":"Estimates of survival from a survextrap model — surv_survextrap","text":"Estimates survival survextrap model","code":""},{"path":"https://chjackson.github.io/survextrap/reference/surv_survextrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates of survival from a survextrap model — surv_survextrap","text":"","code":"surv_survextrap(   x,   newdata = NULL,   times = NULL,   tmax = NULL,   niter = NULL,   sample = FALSE )"},{"path":"https://chjackson.github.io/survextrap/reference/surv_survextrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates of survival from a survextrap model — surv_survextrap","text":"x fitted model object returned survextrap newdata Data frame covariate values compute output . covariates model supplied, following default used: () covariate one factor variable, output computed level factor. (b) multiple covariates, numeric covariates, output computed mean numeric covariate original data, baseline level factor covariate. times Vector times compute estimates. tmax Maximum time compute estimates.  times supplied, ignored.  times supplied, times set set 100 equally spaced time points 0 tmax.  tmax times supplied, tmax set maximum follow time data. niter Number MCMC iterations use compute credible intervals.  Set low value make function quicker, cost approximation error (may important plotting). sample TRUE MCMC samples returned instead summarised median 95% credible intervals.","code":""},{"path":"https://chjackson.github.io/survextrap/reference/survextrap-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'survextrap' package. — survextrap-package","title":"The 'survextrap' package. — survextrap-package","text":"DESCRIPTION PACKAGE","code":""},{"path":"https://chjackson.github.io/survextrap/reference/survextrap-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The 'survextrap' package. — survextrap-package","text":"Stan Development Team (NA). RStan: R interface Stan. R package version 2.26.11. https://mc-stan.org","code":""},{"path":"https://chjackson.github.io/survextrap/reference/survextrap.html","id":null,"dir":"Reference","previous_headings":"","what":"survextrap — survextrap","title":"survextrap — survextrap","text":"survextrap","code":""},{"path":"https://chjackson.github.io/survextrap/reference/survextrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"survextrap — survextrap","text":"","code":"survextrap(   formula,   data,   external = NULL,   smooth_sd = \"estimate\",   prior_weights = NULL,   est_smooth = FALSE,   cure = FALSE,   cure_prior = c(1, 1),   basehaz_ops = NULL,   modelid = 1,   ... )"},{"path":"https://chjackson.github.io/survextrap/reference/survextrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"survextrap — survextrap","text":"formula survival formula standard R formula syntax.  Covariates included right hand side formula modelled proportional hazards. data Data frame containing variables formula. external External data data frame aggregate survival counts columns: start: Start time start: Follow-time n: Number people alive start r: Number people still alive stop intended add facilities package produce format data common forms external data, e.g. registry population data, elicited judgements conditional survival smooth_sd Smoothing parameter. \"estimate\" (default), smoothing parameter estimated empirical Bayes.   Alternatively, fixed value can supplied . TODO finalize distribution used. prior_weights Spline basis weights defining prior mean hazard function. default set values define constant hazard function.  (TODO: tool people convert hazard forms prior weights). ?? prior mean beta? est_smooth TRUE, smoothing parameter given prior distribution estimated full Bayes, smooth_sd argument ignored.  FALSE default. cure TRUE mixture cure model used. cure_prior Beta shape parameters cure probability (vector two) basehaz_ops list control parameters knots: Internal knots.  supplied, df chosen quantiles uncensored survival times. bknots: Boundary knots.  Zero maximum time ?? external? df: Degrees freedom, .e. number parameters.  Default 10. degree: polynomial degree used basis function (default 3, cubic) modelid TODO ... Additional arguments supply control Stan fit, passed rstan function rstan::sampling()","code":""}]
